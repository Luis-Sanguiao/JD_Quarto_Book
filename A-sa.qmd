# Seasonal Adjustment {.unnumbered}

## Overview

The goal of seasonal adjustment is to remove seasonal fluctuations a time series. Seasonal fluctuations are quasi-periodic infra-annual movements. They can mask evolution of greater interest for the user such as short term evolutions or long time trends.

This chapter focuses on the **practical step by step** use of JDemetra+ algorithms, restricted to monthly and quarterly series. For intra-monthly data see the [following chapter](A-sa-hf.qmd). The use of [graphical user interface](T-graphical-user-interface.qmd) and [R packages](T-r-packages.qmd) are described simultaneously whenever relevant.

In-depth methodological explanations of the algorithms are covered in separated chapters, in the [Methods](P_Methods.qmd) part.

This chapter is under construction, missing parts will be updated in the coming months.

More information on the steps and best practices of a seasonal adjustment process can be found in the [Eurostat guidelines on seasonal adjustment](https://ec.europa.eu/eurostat/documents/3859598/6830795/KS-GQ-15-001-EN-N.pdf)

For an overview on the algorithms and methodological issues, please refer to the [Handbook on Seasonal Adjustment](https://ec.europa.eu/eurostat/documents/3859598/8939616/KS-GQ-18-001-EN-N.pdf)

### In this chapter 

- calendar correction steps 


### Seasonal Adjustment Algorithms

+------------------------+---------------+------------------+----------------+
| Algorithm              | Access in GUI | Access in R (v2) | Access in R v3 |
+========================+===============+==================+================+
| X-13 Arima             | yes           | RJDemetra        | rjd3x13        |
+------------------------+---------------+------------------+----------------+
| Reg-Arima only         | yes           | RJDemetra        | rjd3x13        |
+------------------------+---------------+------------------+----------------+
| X11 decomposition only | yes           | RJDemetra        | rjd3x13        |
+------------------------+---------------+------------------+----------------+
| Tramo-Seats            | yes           | RJDemetra        | rjd3tramoseats |
+------------------------+---------------+------------------+----------------+
| Tramo only             | yes           | RJDemetra        | rjd3tramoseats |
+------------------------+---------------+------------------+----------------+
| Seats only             | \-            | \-               | \-             |
+------------------------+---------------+------------------+----------------+
| STL                    | no            | no               | rjd3stl        |
+------------------------+---------------+------------------+----------------+
| STS                    | no            | no               | rjd3sts        |
+------------------------+---------------+------------------+----------------+

: X13-Arima and Tramo-Seats are two-step algorithms with a pre-treatment phase (Reg-Arima or Tramo) and a decomposition phase (X11 and Seats). STL is a local regression (Loess) based decomposition, without pre-treatment. In a Structural Time Series approach pre-treatment and decomposition are done simultaneously in a State Space Framework [(SSF)](M-state-space-framework.qmd).

### Decomposition in unobserved components

To seasonally adjust a series, seasonal factors $S_{t}$ will be estimated and removed from the original raw series: $Y_{sa}=Y_{t}/S_{t}$ or $Y_{sa}=Y_{t}-S_{t}$. To do so the series is first decomposed into unobservable components. Two decomposition models:

-   The additive model: $X_{t} = T_{t} + S_{t} + I_{t}$;

-   The multiplicative model: $X_{t} = T_{t} \times S_{t} \times I_{t}$.

The main components, each representing the impact of certain types of phenomena on the time series ($X_{t}$), are:

-   The trend ($T_{t}$) that captures long-term and medium-term behaviour;

-   The seasonal component ($S_{t}$) representing intra-year fluctuations, monthly or quarterly, that are repeated more or less regularly year after year;

-   The irregular component ($I_{t}$) combining all the other more or less erratic fluctuations not covered by the previous components.

In general, the trend consists of 2 sub-components:

-   The long-term evolution of the series;

-   The cycle, that represents the smooth, almost periodic movement around the long-term evolution of the series. It reveals a succession of phases of growth and recession. Trend and cycle are not separated in SA algorithms.

### Pre-treatment principles

The goal of this step is to remove deterministic effects (calendar and outliers) in order to improve the decomposition. $$
Y_t = \sum {\alpha}_i O_{it} + \sum\beta_j C_{jt} + \sum {\gamma}_i U_{it} + Y_{lin,t}
$$

-   $O_{it}$ are the $i$ final outliers (AO, LS, TC)

-   $C_{it}$ are the calendar regressors (automatic or user-defined) (link to calendar chap)

-   $U_{it}$ are all the other user-defined regressors (link to outliers and regressors chap)

-   $Y_{lin,t} \sim ARIMA(p,d,q)(P,D,Q)$

### Detecting seasonal patterns

A large number of [seasonality tests](M-tests.qmd) are available in JDemetra+. They can be accessed in the graphical user interface or via R.

In rjd3toolkitpackage:

-   Canova-Hansen (`seasonality.canovahansen()`)

In rjd3sa package:

-   X-12 combined test (`seasonality.combined()`)

-   F-test on seasonal dummies (`seasonality.f()`)

-   Friedman Seasonality Test (`seasonality.friedman()`)

-   Kruskall-Wallis Seasonality Test (`seasonality.kruskalwallis()`)

-   Periodogram Seasonality Test (`seasonality.periodogram()`)

-   QS Seasonality Test (`seasonality.qs()`)

## Pre-treatment: Reg-Arima or Tramo

The following sections cover how to perform pre-treatment with Reg-ARIMA (or Tramo) algorithms. Tramo and the Reg-Arima part of X13-Arima rely on very similar principles: [Reg-Arima modelling](M-reg-arima-modelling.qmd). Thus Tramo will be mentioned only to highlight differences with the Reg-Arima part of X13-Arima. Reg-Arima modelling part can be of a seasonal adjustment process or run on its own, we focus first on launching pre-treatment as part of a SA processing.

### Default Specifications

Default specifications are set for the whole SA procedure, pre-treatment and decomposition. They are slightly different for X13-ARIMA and Tramo-Seats and can be modified with user defined parameters.

#### Starting point for X13-ARIMA

+-----------------+---------------------+--------------------+------------------+----------------+
| Spec identifier | Log/level detection | Outliers detection | Calendar effects | ARIMA          |
+=================+=====================+====================+==================+================+
| RSA0            | *NA*                | *NA*               | *NA*             | Airline(+mean) |
+-----------------+---------------------+--------------------+------------------+----------------+
| RSA1            | automatic           | AO/LS/TC           | *NA*             | Airline(+mean) |
+-----------------+---------------------+--------------------+------------------+----------------+
| RSA2c           | automatic           | AO/LS/TC           | 2 TD vars+Easter | Airline(+mean) |
+-----------------+---------------------+--------------------+------------------+----------------+
| RSA3            | automatic           | AO/LS/TC           | *NA*             | automatic      |
+-----------------+---------------------+--------------------+------------------+----------------+
| RSA4c           | automatic           | AO/LS/TC           | 2 TD vars+Easter | automatic      |
+-----------------+---------------------+--------------------+------------------+----------------+
| RSA5            | automatic           | AO/LS/TC           | 7 TD vars+Easter | automatic      |
+-----------------+---------------------+--------------------+------------------+----------------+
| X-11            | *NA*                | *NA*               | *NA*             | *NA*           |
+-----------------+---------------------+--------------------+------------------+----------------+

explanations:

-   *NA:* non applied, for example in RSA3 there is no calendar effect correction

-   automatic: test is performed

outliers detection: AO/LS/TC type of outliers automatically detected under a critical T-Stat value (default value=4)

calendar:

-   2 regressors: weekdays vs week-ends + LY

-   7 regressors: each week day vs Sundays + LY

-   always tested

-   easter tested (default length = 6 days in Tramo, 8 days in X13-Arima)

#### Starting point for Tramo-Seats

+-----------------+---------------------+--------------------+------------------+----------------+
| Spec identifier | Log/level detection | Outliers detection | Calendar effects | ARIMA          |
+=================+=====================+====================+==================+================+
| RSA0            | *NA*                | *NA*               | *NA*             | Airline(+mean) |
+-----------------+---------------------+--------------------+------------------+----------------+
| RSA1            | automatic           | AO/LS/TC           | *NA*             | Airline(+mean) |
+-----------------+---------------------+--------------------+------------------+----------------+
| RSA2            | automatic           | AO/LS/TC           | 2 TD vars+Easter | Airline(+mean) |
+-----------------+---------------------+--------------------+------------------+----------------+
| RSA3            | automatic           | AO/LS/TC           | *NA*             | automatic      |
+-----------------+---------------------+--------------------+------------------+----------------+
| RSA5            | automatic           | AO/LS/TC           | 6 TD vars+Easter | automatic      |
+-----------------+---------------------+--------------------+------------------+----------------+
| RSAfull         | automatic           | AO/LS/TC           | automatic        | automatic      |
+-----------------+---------------------+--------------------+------------------+----------------+

Principle of user setting parameters: can be done from one of the default specifications or any specification in a "save" as" mode very similar in GUI and R, see below.

### Spans

#### Estimation span

Specifies the span (data interval) of the time series to be used in the seasonal adjustment process. The user can restrict the span

Common settings

+-------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------+
| Option            | Description (expected format)                                                                                                                                               |        |
+===================+=============================================================================================================================================================================+========+
| All               | default                                                                                                                                                                     |        |
+-------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------+
| From              | first observation included (yyyy-mm-dd)                                                                                                                                     |        |
+-------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------+
| To                | last observation included (yyyy-mm-dd)                                                                                                                                      |        |
+-------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------+
| Between           | interval \[from ; to\] included (yyyy-mm-dd to yyyy-mm-dd)                                                                                                                  |        |
+-------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------+
| First             | number of obs from the beginning of the series included (dynamic) (integer)                                                                                                 |        |
+-------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------+
| Last              | number of obs from the end of the series (dynamic)(integer)                                                                                                                 |        |
+-------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------+
| Excluding         | excluding N first obs and P last obs from the computation,dynamic) (integer)                                                                                                |        |
+-------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------+
| Preliminary check | check to exclude highly problematic series e.g. the series with a number of identical observations and/or missing values above pre-specified threshold values. (True/False) |        |
+-------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------+

**Setting series span in GUI**

Use the specification window for a given series and expand the nodes.

![](All_images/SA_REGA_Spans.png)

**Setting series span in R**

x13 in version 2

```{r, EVAL=FALSE}
library(RJDemetra)
# estimation interval: option with static dates
user_spec_1<-x13_spec(spec = c("RSA5c", "RSA0", "RSA1", "RSA2c", 
                               "RSA3", "RSA4c", "X11"), 
preliminary.check = TRUE, 
estimate.from = "2012-06-01", 
estimate.to = "2019-12-01") 

# estimation interval: option with dynamic numbers of observations

# 
# spec can be applied on different series and therefore exclude different dates
user_spec_2<-x13_spec(spec = c("RSA5c", "RSA0", "RSA1", "RSA2c", "RSA3", "RSA4c", "X11"), 
estimate.first = 12) 

# eestimation on the last 120 obs
user_spec_3<-x13_spec(spec = c("RSA5c", "RSA0", "RSA1", "RSA2c", "RSA3", "RSA4c", "X11"), 
estimate.last = 120)

#excluding first 24 and last 36 observations
user_spec_4<-x13_spec(spec = c("RSA5c", "RSA0", "RSA1", "RSA2c", "RSA3", "RSA4c", "X11"), 
estimate.exclFirst = 24, 
estimate.exclLast = 36)

# Retrieve settings
```

For comprehensive details about x13_spec function see RJDemetra R help pages.

Tramo-Seats in version 2

```{r, eval=FALSE}

#excluding first 24 and last 36 observations
user_spec_1<-tramoseats_spec( spec = c("RSAfull", "RSA0", "RSA1", "RSA2", "RSA3", "RSA4", "RSA5"),  
estimate.exclFirst = 24, 
estimate.exclLast = 36)

```

For comprehensive details about tramoseats_spec function see RJDemetra R help pages.

#### Setting model span

The user can also specify the span (data interval) of the time series to be used for the estimation of the Reg-ARIMA model coefficients. It allows to impede a chosen part of the data from influencing the regression estimates. Setting works the same way as setting series (estimation) span described above.

Additional (vs series span setting) parameters are described below:

+---------------------------+-----------------------------------------------------------------------------------------------------------------------------+
| Tolerance                 | Convergence tolerance for the non-linear estimation.                                                                        |
|                           |                                                                                                                             |
|                           | The absolute changes in the log-likelihood are compared to Tolerance to check the convergence of the estimation iterations. |
|                           |                                                                                                                             |
|                           | The default setting is 0.0000001.                                                                                           |
+---------------------------+-----------------------------------------------------------------------------------------------------------------------------+
| Tramo specific parameters |                                                                                                                             |
+---------------------------+-----------------------------------------------------------------------------------------------------------------------------+
| Exact ML                  | When this option is marked, an exact maximum likelihood estimation is performed.                                            |
|                           |                                                                                                                             |
|                           | Alternatively, the Unconditional Least Squares method is used.                                                              |
|                           |                                                                                                                             |
|                           | However, in the current version of JDemetra+ it is not recommended to change this parameter's value                         |
+---------------------------+-----------------------------------------------------------------------------------------------------------------------------+
| Unit Root Limit           | Limit for the autoregressive roots. If the inverse of a real root of the autoregressive polynomial of the                   |
|                           |                                                                                                                             |
|                           | ARIMA model is higher than this limit, the root is set equal to 1. The default parameter value is 0.96.                     |
+---------------------------+-----------------------------------------------------------------------------------------------------------------------------+

**Setting model span in GUI**:

Use the specification window

![](All_images/SA_REGA_model_spans.png)

**Setting in R**

Tramo example in version 2

```{r, eval=FALSE}

#excluding first 24 and last 36 observations
user_spec_1<-tramoseats_spec( spec = c("RSAfull", "RSA0", "RSA1", "RSA2", "RSA3", "RSA4", "RSA5"),  
estimate.tol = 0.0000001, 
estimate.eml = FALSE, 
estimate.urfinal = 0.98)

```

### Decomposition Scheme

#### Parameters

Transformation test: a test is performed to choose between an additive decomposition (no transformation) (link to reg A chap to detail this)

Settings

Function

transform {function=}

Transformation of data. 2 The user can choose between:

None -- no transformation of the data;

Log -- takes logs of the data;

Auto -- the program tests for the log-level specification. This option is recommended for automatic modelling of many series.

The default setting is Auto.

Reg-Arima specific settings

AIC difference

transform {aicdiff=}

Defines the difference in AICC needed to accept no transformation over a log transformation when the automatic transformation

selection option is invoked. The option is disabled when Function is not set to Auto. The default AIC difference value is -2.

Adjust

transform {adjust=}

Options for proportional adjustment for the leap year effect. The option is available when Function is set to Log. Adjust can be set to:

LeapYear -- performs a leap year adjustment of monthly or quarterly data;

LengthofPeriod -- performs a length-of-month adjustment on monthly data or length-of-quarter adjustment on quarterly data;

None -- does not include a correction for the length of the period.

The default setting is None

Tramo specific settings

**Fct**\
*Transformation; fct*

Controls the bias in the log/level pre-test (the function is active when **Function** is set to *Auto*); **Fct** \> 1 favours levels, **Fct** \< 1 favors logs. The default setting is 0.95.

**Set in GUI**

![Model span setting](All_images/SA_REGA_transfo.png)

**Set and in R**

X13

```{r, eval=FALSE}

#excluding first 24 and last 36 observations
user_spec <-x13_spec(spec = c("RSA5c", "RSA0", "RSA1", "RSA2c", "RSA3", "RSA4c", "X11"), 
transform.function ="Log", # choose from: c(NA, "Auto", "None", "Log"),
transform.adjust = "LeapYear", #c(NA, "None", "LeapYear", "LengthOfPeriod"),
transform.aicdiff = -3)
#Retrieve settings: to complete*
```

Tramo-Seats settings

```{r, eval=FALSE}
#transfo
user_spec_1<-tramoseats_spec( spec = c("RSAfull", "RSA0", "RSA1", "RSA2", "RSA3", "RSA4", "RSA5"),  
transform.function = "Auto", #c(NA, "Auto", "None", "Log"), 
transform.fct = 0.5)
# Retrieve settings: to complete 
```

### Calendar correction


Some calendar correction options included in the starting specifications for X13-Arima or Tramo-Seats, they can be fine-tuned and user-defined by modifying specifications. The following section lists all the available options, illustrates how to set them in GUI or R and shows have to retrieve used parameters, regressors as well as results.

JDemetra+ offers two default options for calendar correction working days regressors and trading days regressors, with Leap-year effect if needed. Those options don't take into account national calendars (link) and their specific holidays. There are two ways to change this:

-   user-defined regressors (link)

-   customized calendars (link)

Overview: what you can do

Need 1: correct for working days, trading days (+ easter) not taking national calendars

Need 2: taking national calendar into account Solutions

-   add a work of means of allocating regressors to the calendar component

#### Available Options

##### Trading Days

"Trading Days" has two meanings: general calendar correction process (here without easter effect) and one of the options of this correction (see below)

    -    "None": no correction for trading days and working days effects

    -    "Default": JDemetra + built regressors (xorking days or trading days)

    -    "Holidays": same as above but taking into accoutn a national calendar,                  available on ly in GUI, R interface requires direct use of pre-built                   regressors 

    -     "UserDefined": user-defined trading days regressors (see below)

    -    (if NONE) indicating the day of the month when inventories and other stock are reported (to denote the last day of the month, set the variable to 31). 

##### Leap Year effect

**Autoadjust**

If enabled, the program corrects automatically for the leap year effect. when is the option available Modifications of this variable are taken into account only when transform.function is set to "Auto".

**Leapyear**

to specify whether or not to include the leap-year effect in the model: - "LeapYear": leap year effect; - "LengthOfPeriod": length of period, - "None" = no effect included.

The leap-year effect can be pre-specified in the model only if the input series hasn't been pre-adjusted (transform.adjust set to "None") and if the automatic correction for the leap-year effect isn't selected (tradingdays.autoadjust set to FALSE).

#### Test

**Test**: defines the pre-tests for the significance of the trading day regression variables based on the AICC statistics: "Add" = the trading day variables are not included in the initial regression model but can be added to the RegARIMA model after the test; "Remove" = the trading day variables belong to the initial regression model but can be removed from the RegARIMA model after the test; "None" = the trading day variables are not pre-tested and are included in the model.

##### Easter

Easter.enabled a logical. If TRUE, the program considers the Easter effect in the model.

easter.Julian a logical. If TRUE, the program uses the Julian Easter (expressed in Gregorian calendar).

easter.duration a numeric indicating the duration of the Easter effect (length in days, between 1 and 20).

easter.test defines the pre-tests for the significance of the Easter effect based on the t-statistic (the Easter effect is considered as significant if the t-statistic is greater than 1.96): "Add" = the Easter effect variable is not included in the initial regression model but can be added to the RegARIMA model after the test; "Remove" = the Easter effect variable belongs to the initial regression model but can be removed from the RegARIMA model after the test; "None" = the Easter effect variable is not pre-tested and is included in the model.



A user-defined regressor can also be used, see chapter on [calendar correction](A-calendar-and-input.qmd)

(to be added: additional options in Tramo)

#### Setting Calendar correction in GUI

##### Using default options (without national calendars)

**In GUI** Use the specification window

Calendar effects

STEP 1: Selection from JDemetra+ Default...or User_defined

![](All_images/SA_REGA_calendar_options.png)

SA_REGA_calendar_options.png

STEP2: Calendar effects minus Easter are labeled **trading days**

![](All_images/SA_REGA_calendar_default_options.png)

##### Holidays option

using a customized calendar just show how to fetch it building process in calendar chapter

![](All_images/SA_REGA_calendar_custom.png)

Missing: stock td option, length-of-period

User-defined regressors: adding see below

Link to Import data Once data imported: here explain how to link variables

##### Easter

![](All_images/SA_REGA_easter_options.png)

#### Setting Calendar correction in R

In version 2

```{r, eval=FALSE}
# Parameter choice NA=...
  tradingdays.option = c(NA, "TradingDays", "WorkingDays", "UserDefined", "None"),
  tradingdays.autoadjust = NA,
  tradingdays.leapyear = c(NA, "LeapYear", "LengthOfPeriod", "None"),
  tradingdays.stocktd = NA_integer_,
  tradingdays.test = c(NA, "Remove", "Add", "None"),
  easter.enabled = NA,
  easter.julian = NA,
  easter.duration = NA_integer_,
  easter.test = c(NA, "Add", "Remove", "None"),
# example 
```

In version 3 (Under construction)

#### User defined regressors

If **User Defined** options is used for trading days, regressors have to be provided by the user.

Building Regressors The underlying methodology and implementation in JDemetra+ to build these regression variables are provided [here](A-Calendar-and-input.qmd)

##### Adding Regressors in GUI

Step 1: import data set containing the regressors, general procedure explained here

Step 2: Link the regressors to the workspace, procedure detailed here

Step 3: Modify specifications Modifications are done the same way in a global specification (whole SAP) or series by series.

-   select trading days **User-defined option** and select variables

In the specification window, click right from "userVariables" on "Unused" to open the variable selection window

![](All_images/SA_REGA_calendar_user_defined_open_variables_window.png)

Move right the chosen regressors

![](All_images/SA_REGA_calendar_user_def_variables.png)

-   set TEST option (expl)

![](All_images/SA_REGA_Calendar_user_def_test.png)

##### Adding Regressors in R

"UserDefined" = user-defined trading days regressors (regressors must be defined by the usrdef.var argument with usrdef.varType set to "Calendar" and usrdef.varEnabled = TRUE).

```{r, eval=FALSE}

# example 
spec_4 <- x13_spec(spec = spec_1, 
                   tradingdays.option = "UserDefined", 
                   tradingdays.test = "None", 
                   usrdef.varEnabled = TRUE, 
                   usrdef.varType = "Calendar", 
                   usrdef.var = reg3) # set of regressors in TS format
```

#### Retrieving Results

The following section details how to retrieve results (parameters, regressors, regression coefficients and tests) when using GUI or R interface.

##### Parameters

Parameters are regressors used in fine. If non test options, parameters are known If test options are selected by the algorithm.

**In GUI**

Automatically chosen or user-defined calendar options (as well as other pre-adjustment options) are displayed at the top of the MAIN Results NODE displayed by clicking on a given series name in the SAProcessing panel.

![](All_images/SA_REGA_retrieve_cal_options_MAIN.png)

**In R**

(to be added)

version 2: RJDemetra

version 3: rjd3x13 or rjd3tramoseats

##### Regressors

**In GUI** All regressors in the pre-adjustment phase (calendar, outliers, external) are displayed in the pre-processing-regressors node.

![](All_images/SA_REGA_calendar_retrieving_regressors.png)

**In R**

(to be added)

Version 2

version 3

##### Regression results

Regressions results

**In GUI**

The results of the whole Reg-Arima regression (link to last section) including calendar effects (below) are displayed in the pre-processing panel.

![](All_images/SA_REGA_calendar_retrieving_regressions_results.png)

**In R**

##### Test for residual trading-days effects

Residual calendar effects are tested with A F-Test 7 regressors and no national calendar, on sa final series and on irregular component (link to calendar chapter for test details)

**In GUI**

F-Test results are displayed at the bottom of **Main Results** NODE in the SAProcessing panel

![](All_images/SA_REGA_Calendar_EJOR_Test.png)

**In R**

#### Customizing Calendars

The following describes how to take a national calendar into account.

Solution 1: if working with GUI build a new calendar in GUI ([here](A-calendar-and-input.qmd###Customizing calendars)

(to be added: GUI: how to use it or customize HTML file structure explanation)

set this option in GUI

(to be added: image: spec window calendar / holidays / choice of calendars)

set this option in R
(to be added)
version 2:

version 3:

solution 2: import external regressors, which can be built with rjd3toolkit (link) which can then be used in via are or imported via GUI

set this option in GUI how to import variables into JD+ / set utility (in interface chapter) classical user defined

set this option in R version 2:

version 3

Once the calendar regressors are set, the RegArima (tramo) model will be estimated globally with all the other regression variables and taking into account Arima model specificities as well. That is why diagnostics are all jointly displayed at the end of the process. (link)

(to be added: worked example: french calendar in R)

### Outliers

(to be added)
overview: why use outliers and what happens ?  Effects reallocation

More in depth method outline will be available in [outliers](A-outlier-detection.qmd) chapter what will be available

#### Available outliers

The following outliers are available for automatic detection

![](All_images/SA_REGA_Outliers_AO_LS_TC.png)

![](All_images/SA_REGA_Outliers_SO.png)

#### Options for automatic detection

\*Is enabled\*\*<br> *outliers; iatip*

      Enables/disables the automatic detection of outliers in the span determined by the **Detection span** option. By default, the checkbox is marked, which implies that the automatic identification of outliers is enabled.

-   **Use default critical value**<br> *outliers; va*

    The critical value is automatically determined by the number of observations in the interval specified by the **Detection span** option. When **Use default critical value** is disabled, the procedure uses the critical value inputted in the **Critical value** item (see below). Otherwise, the default value is used (the first case corresponds to "*critical* = *xxx*"; the second corresponds to a specification without the critical argument). It should be noted that it is not possible to define a separate critical value for each outlier type. By default, the checkbox is marked, which implies that the automatic determination of the critical value is enabled.\

-   **Critical value**<br> *outliers; va*

    The critical value used in the outlier detection procedure. The option is active once **Use default critical value** is disabled. By default, it is set to 3.5.

-   **Detection span** $\rightarrow \$ **type**<br> *outliers; int1, int2\**

    A span of the time series to be searched for outliers. The possible values of the parameter are:

    -   *All* -- full time series span is considered in the modelling;
    -   *From* -- date of the first time series observation included in the pre-processing model;
    -   *To* -- date of the last time series observation included in the pre-processing model;
    -   *Between* -- date of the first and the last time series observations included in the pre-processing model;
    -   *Last* -- number of observations from the end of the time series included in the pre-processing model;
    -   *First* -- number of observations from the beginning of the time series included in the pre-processing model;
    -   *Excluding* -- number of observations excluded from the beginning (specified in the *first* field) and/or end of the time series (specified in the *last* field) of the pre-processing model.

    With the options *Last*, *First*, *Excluding* the span can be computed dynamically on the series. The default setting is *All*.

-   **Additive**<br> *outliers; aio\**

    Automatic identification of additive outliers. By default, this option is enabled.\

-   **Level shift**<br> *outliers; aio\**

    Automatic identification of level shifts. By default, this option is enabled.

-   **Transitory change**<br> *outliers; aio\**

    Automatic identification of transitory changes. By default, this option is enabled.

-   **Seasonal outlier**<br> *outliers; aio\**

    Automatic identification of seasonal outliers. By default, this option is disabled. Tramo specific

-   **EML estimation**<br> *outliers; imvx*

    The estimation method used in the automatic model identification procedure. By default, the fast method of Hannan-Rissanen is used for parameter estimation in the intermediate steps of the automatic detection and correction of outliers. When the checkbox is marked the exact maximum likelihood estimation method is used.

-   **TC rate**<br>*outliers; deltatc*

    The rate of decay for the transitory change outlier. It takes values between 0 and 1. The default value is 0.7.

#### Options for pre-specified outliers

User-defined outliers are used when prior knowledge suggests that certain effects exist at known time points\[\^14\]. Four pre-defined outlier types, which are simple forms of intervention variables, are implemented: \* Additive Outlier (AO); \* Level shift (LS); \* Temporary change\[\^15\] (TC); \* Seasonal outliers (SO).

#### Setting in GUI

Automatic detection

![](All_images/SA_REGA_Outliers_Automatic_detection.png)

![](All_images/SA_REGA_Outliers_automatic_detection_span.png)

Pre-specified

![](All_images/SA_REGA_Outliers_set_pre_specified.png)

#### Setting in R

(to be added)

#### Retrieving results

##### Parameters

**In GUI**

In main results NODE (same info at top of pre-processing NODE)

![](All_images/SA_REGA_Outliers_Retrieve_params1.png)

##### Regressors

**In GUI**

![](All_images/SA_REGA_Outliers_Retrieve_Regressors.png)

**In R**

(to be added)

##### Regression details

**In GUI**

![](All_images/SA_REGA_Outliers_Retrieve_Regression_Results.png)

**In R**

(to be added)

### User-defined regressors

(to be added) 

- rationale

- parameters: assign to a component

Pre-treatment regression with additional outliers

$$
Y_t = \sum \hat{\alpha}_i O_{it} + \sum\hat\beta_j C_{jt} + \sum\hat\gamma_k Reg_{kt} + y_{lin_t}
$$

##### Allocation to components

$reg= reg_{i}+reg_{t}+reg_{s}+...$ 
The user-defined regression variable associated to a specific component should not contain effects that have to be associated with another component. Therefore, the following rules should be observed: \* The variable assigned to the trend or to the seasonally adjusted series should not contain a seasonal pattern; \* The variable assigned to the seasonal should not contain a trend (or level); \* The variable assigned to the irregular should contain neither a seasonal pattern nor a trend (or level). - no external regressors can be assigned to calendar component. It has to be be done via user defined calendar regressors specific part (link)

Ramps and intervention variables are Specific cases of external regressors

#### Setting in GUI

User-defined variables

Step 1: import data set containing the regressors, general procedure explained here

Step 2: Link the regressors to the workspace, procedure detailed here

Step 3: Modify specifications via window 

Modifications are done the same way in a global specification (whole SAP) or series by series.

![](All_images/SA_REGA_User_def_Regressors_1.png)

#### Setting in R

(to be added)

#### Special case 1: Ramp effects

A ramp effect means a linear increase or decrease in the level of the series over a specified time interval $t_{0}$ to $\ t_{1}$. All dates of the ramps must occur within the time series span. (tested: not true). Ramps can overlap other ramps, additive outliers and level shifts.

###### Creation in GUI

![](All_images/SA_REGA_user_def_regs_ramps_definition.png)

###### Creation in R

(to be added)

###### Allocation to components

allocation when intervention or ramps ? in test allocated to trend ? (reg)

impossible (?) to create several intervention variables

#### Special case 2: Intervention variables

Intervention variables: Intervention variables are modeled as any possible sequence of ones and zeros, on which some operators may be applied. Intervention variables are built as combinations of the following basic structures\[\^16\]: \* Dummy variables\[\^17\]; \* Any possible sequence of ones and zeros; \* $\frac{1}{(1 - \delta B)}$, \* $(0 < \delta \leq 1)$; \* $\frac{1}{(1 - \delta_{s}B^{s })}$, \* $(0 < \delta_{s} \leq 1)$; \* $\frac{1}{(1 - B)(1 - B^{s})}$; where $B$ is backshift operator (i.e. $B^{k}X_{t} = X_{t - k}$) and $s$ is frequency of the time series ($s = 12\$for a monthly time series, $s = 4\$for a quarterly time series).

These basic structures enable the generation of not only AO, LS, TC, SO and RP outliers but also sophisticated intervention variables that are well-adjusted to the particular case.

Ramp Effects:

As they are the most common external regressors, JDemetra+ offers functionalities to build them directly

###### Creation in GUI

step 1 ![](All_images/SA_REGA_calendar_user_def_inter_var_1.png)

Step 2:

![](All_images/SA_REGA_calendar_user_def_inter_var_2.png)

step 3: ![](All_images/SA_REGA_calendar_user_def_inter_var_3.png) 

###### Creation in R

(to be added)

###### Allocation to components

allocation (to be added)

fixed coefficient options

-   **Fixed regression coefficients**<br> *regression variables; --*

    For the pre-specified regression variables this option specifies the parameter estimates that will be held fixed at the values provided by the user. To fix a coefficient the user should undertake the following actions:

    -   Choose the transformation (log or none).
    -   Define some regression variables in the *Regressors* specification.
    -   Push on the fixed regression coefficients editor button in the **User-defined variables** row.
    -   Select the regression variable from the list for which the coefficient will be fixed.
    -   Save the new setting with the **Done** button.

Overview: differences GUI set up vs R set up

#### Retrieving Results

For all types of external regressors: user-defined, ramps or intervention variables.

##### Regressors

**In GUI**

To retrieve regressors that were actually used, expand pre-processing NODE and click on Regressors pane.

![](All_images/SA_REGA_user_vars_retrieving_regressors.png)

**In R**

(to be added )

##### Regression details

**In GUI**

Regression details are in the pre-processing pane.

![](All_images/SA_REGA_user_vars_regression_details.png)

**IN R**

### Arima Model

Key specifications on Arima modelling are embedded in default specifications: airline (default model) or full automatic research.(links)

Two kinds of interventions are available to the user

-   modify automatic detection parameters

-   set a user defined Arima model

In both cases forecast horizon can also be set (link)

#### Options for modifying automatic detection

*automdl.enabled* If TRUE, the automatic modelling of the ARIMA model is enabled. (If FALSE, the parameters of the ARIMA model can be specified, see below)

Control variables for the automatic modelling of the ARIMA model (when automdl.enabled is set to TRUE):

*automdl.acceptdefault* a logical. If TRUE, the default model (ARIMA(0,1,1)(0,1,1)) may be chosen in the first step of the automatic model identification. If the Ljung-Box Q statistics for the residuals is acceptable, the default model is accepted and no further attempt will be made to identify another model.

*automdl.cancel* the cancellation limit (numeric). If the difference in moduli of an AR and an MA roots (when estimating ARIMA(1,0,1)(1,0,1) models in the second step of the automatic identification of the differencing orders) is smaller than the cancellation limit, the two roots are assumed equal and cancel out.

*automdl.ub1* the first unit root limit (numeric). It is the threshold value for the initial unit root test in the automatic differencing procedure. When one of the roots in the estimation of the ARIMA(2,0,0)(1,0,0) plus mean model, performed in the first step of the automatic model identification procedure, is larger than the first unit root limit in modulus, it is set equal to unity.

*automdl.ub2* the second unit root limit (numeric). When one of the roots in the estimation of the ARIMA(1,0,1)(1,0,1) plus mean model, which is performed in the second step of the automatic model identification procedure, is larger than second unit root limit in modulus, it is checked if there is a common factor in the corresponding AR and MA polynomials of the ARMA model that can be cancelled (see automdl.cancel). If there is no cancellation, the AR root is set equal to unity (i.e. the differencing order changes).

*automdl.mixed* a logical. This variable controls whether ARIMA models with non-seasonal AR and MA terms or seasonal AR and MA terms will be considered in the automatic model identification procedure. If FALSE, a model with AR and MA terms in both the seasonal and non-seasonal parts of the model can be acceptable, provided there are no AR or MA terms in either the seasonal or non-seasonal terms.

*automdl.balanced* a logical. If TRUE, the automatic model identification procedure will have a preference for balanced models (i.e. models for which the order of the combined AR and differencing operator is equal to the order of the combined MA operator).

*automdl.armalimit* the ARMA limit (numeric). It is the threshold value for t-statistics of ARMA coefficients and constant term used for the final test of model parsimony. If the highest order ARMA coefficient has a t-value smaller than this value in magnitude, the order of the model is reduced. If the constant term t-value is smaller than the ARMA limit in magnitude, it is removed from the set of regressors.

*automdl.reducecv* numeric, ReduceCV. The percentage by which the outlier's critical value will be reduced when an identified model is found to have a Ljung-Box statistic with an unacceptable confidence coefficient. The parameter should be between 0 and 1, and will only be active when automatic outlier identification is enabled. The reduced critical value will be set to (1-ReduceCV)\*CV, where CV is the original critical value.

*automdl.ljungboxlimit* the Ljung Box limit (numeric). Acceptance criterion for the confidence intervals of the Ljung-Box Q statistic. If the LjungBox Q statistics for the residuals of a final model is greater than the Ljung Box limit, then the model is rejected, the outlier critical value is reduced and model and outlier identification (if specified) is redone with a reduced value.

*automdl.ubfinal* numeric, final unit root limit. The threshold value for the final unit root test. If the magnitude of an AR root for the final model is smaller than the final unit root limit, then a unit root is assumed, the order of the AR polynomial is reduced by one and the appropriate order of the differencing (non-seasonal, seasonal) is increased. The parameter value should be greater than one.

(for both options) *fcst.horizon* the forecasting horizon (numeric). The forecast length generated by the Reg-Arima model in periods (positive values) or years (negative values). By default, the program generates a two-year forecast (fcst.horizon set to -2). Defaults different in GUI and R.

**Setting in GUI** ![](All_images/SA_REGA_arima_auto_params.png)

Forecast horizon when using tramo seats Is set in the decomposition part of the specification in GUI.

![](All_images/SA_REGA_arima_forecast_horizon_tramo.png)

Forecast horizon when using X13-ARIMA ![](All_images/SA_REGA_arima_forecast_horizon_X11.png)

**Setting in R** (first template, then worked example) X13-Arima template in version 2

```{r,eval=FALSE}
spec_2 <- x13_spec(spec = spec_1,
automdl.enabled = NA,
  automdl.acceptdefault = NA,
  automdl.cancel = NA_integer_,
  automdl.ub1 = NA_integer_,
  automdl.ub2 = NA_integer_,
  automdl.mixed = NA,
  automdl.balanced = NA,
  automdl.armalimit = NA_integer_,
  automdl.reducecv = NA_integer_,
  automdl.ljungboxlimit = NA_integer_,
  automdl.ubfinal = NA_integer_)

```

add worked example in version 2

in version 3

add worked example in version 3

#### Options for setting a user-defined Arima model

Control variables for the non-automatic modelling of the ARIMA model (when *automdl.enabled* is set to FALSE):

*arima.mu* logical. If TRUE, the mean is considered as part of the ARIMA model.

*arima.p* numeric. The order of the non-seasonal autoregressive (AR) polynomial.

*arima.d* numeric. The regular differencing order.

*arima.q* numeric. The order of the non-seasonal moving average (MA) polynomial.

*arima.bp* numeric. The order of the seasonal autoregressive (AR) polynomial.

*arima.bd* numeric. The seasonal differencing order.

*arima.bq* numeric. The order of the seasonal moving average (MA) polynomial.

Control variables for the user-defined ARMA coefficients. Coefficients can be defined for the regular and seasonal autoregressive (AR) polynomials and moving average (MA) polynomials. The model considers the coefficients only if the procedure for their estimation (arima.coefType) is provided, and the number of provided coefficients matches the sum of (regular and seasonal) AR and MA orders (p,q,bp,bq).

*arima.coefEnabled* logical. If TRUE, the program uses the user-defined ARMA coefficients.

*arima.coef* a vector providing the coefficients for the regular and seasonal AR and MA polynomials. The vector length must be equal to the sum of the regular and seasonal AR and MA orders. The coefficients shall be provided in the following order: regular AR (Phi; p elements), regular MA (Theta; q elements), seasonal AR (BPhi; bp elements) and seasonal MA (BTheta; bq elements). E.g.: arima.coef=c(0.6,0.7) with arima.p=1, arima.q=0,arima.bp=1 and arima.bq=0.

*arima.coefType* a vector defining the ARMA coefficients estimation procedure. Possible procedures are: "Undefined" = no use of any user-defined input (i.e. coefficients are estimated), "Fixed" = the coefficients are fixed at the value provided by the user, "Initial" = the value defined by the user is used as the initial condition. For orders for which the coefficients shall not be defined, the arima.coef can be set to NA or 0, or the arima.coefType can be set to "Undefined". E.g.: arima.coef = c(-0.8,-0.6,NA), arima.coefType = c("Fixed","Fixed","Undefined").

**Setting in GUI** ![](All_images/SA_REGA_Arima_user_params_1.png)

Fixing coefficients ![](All_images/SA_REGA_Arima_user_params_2.png)

**Setting in R**

X13-Arima template in version 2

```{r,eval=FALSE}
spec_2 <- x13_spec(spec = spec_1, 
automdl.enabled = FALSE,

  arima.mu = NA,
  arima.p = NA_integer_,
  arima.d = NA_integer_,
  arima.q = NA_integer_,
  arima.bp = NA_integer_,
  arima.bd = NA_integer_,
  arima.bq = NA_integer_,
  arima.coefEnabled = NA,
  arima.coef = NA,
  arima.coefType = NA,
  fcst.horizon = NA_integer_)

```

in version 3

### Reg-Arima model Results and Diagnostics

Type of results (including Tramo addenda) 

- all regressors used (shown above) 

- regression details: explanatory variables (above)

- Arima model specific results

- additional diagnostics on residuals 

- likelihood 

- seasonality tests on residuals 

#### Display in GUI

Reg-Arima model detail with other regression results in pre-processing pane. with number of observations.. parameters ![](All_images/SA_REGA_Arima_model_results_1.png)

More details in Pre-processing/Arima Node

![](All_images/SA_REGA_Arima_model_results_2.png)

In residual Node

![](All_images/SA_REGA_Arima_Model_residuals_node_1.png)

![](All_images/SA_REGA_Arima_Model_residuals_node_2.png)

![](All_images/SA_REGA_Arima_Model_residuals_node_3.png)

![](All_images/SA_REGA_Arima_Model_residuals_node_4.png)

![](All_images/SA_REGA_Arima_Model_residuals_node_5.png)

![](All_images/SA_REGA_Arima_Model_residuals_node_6.png)

![](All_images/SA_REGA_Arima_Model_Likelihood_Node.png) Seasonality tests on residuals in the **Diagnostics NODE**

(link to test chapter for tests details)

![](All_images/SA_REGA_Arima_Model_residuals_seaso_tests.png)

#### Retrieve in R

(to be added)

## X-11 Decomposition

This part explains how to use X-11 decomposition algorithm, via R as well as via GUI. The algorithm itself is explained in more details [here](M-X11-decomposition.qmd)

In a nutshell, X-11 will de decompose the **linearized series** using iteratively different moving averages. The effects of pre-treatment will be reallocated at the end.

The sections below (will) describe

-   specifications needed to run X-11

-   generated output

-   series

-   diagnostics

-   final parameters

-   user-defined parameters

### Default specifications

The default specifications for X-11 must be chosen at the starting of the SA processing. They are detailed in the [Reg-Arima part](A-sa.qmd#Pre-treatment:%20Reg-ARIMA%20(or%20Tramo)). X-11 can be run without pre-treatment

### Quick Launch

#### From GUI

With a workspace open, an SAProcessing created and open data provider:

-   choose a default specification

-   drop your data and press green arrow

#### In R

In version 2

```{r,eval=FALSE}

library(RJDemetra)
model_sa<-x13(raw_series, spec ="RSA5c")

```

The model_sa R object (list of lists) contains all parameters and results. It will be progressively detailed below.

### Retrieve series

#### Display in GUI

Main results ![Text](All_images/SA_MainResults_Series.png)

(forecasts glued, values in *italic*)

X-11 Tables

![Text](All_images/RDimage41.png)

Output series can be exported out of GUI by two means:

-   generating output files

-   running the cruncher to generate those files as described [here](T-Production-tools-cruncher-QR.qmd)

#### Retrieve in R

In version 2

```{r,eval=FALSE}

# final components
model_sa$final$series
# final forecasts y_f sa_f s_f t_f i_f
model_sa$final$forecasts
# from user defined output 
```

### Retrieve Diagnostics

X11 produces the following type diagnostics or quality measures

#### SI-ratios

##### Display in GUI

NODE Main Results \> SI-Ratios SA_MainResults_SI_ratios.png

![Text](All_images/SA_MainResults_SI_ratios.png)

In GUI all values cannot be retrieved

##### Retrieve in R

In version 2

```{r, eval=FALSE}
# data frame with values 
model_sa$decomposition$si_ratio
# customizable plot
plot(model_sa, type= "cal-seas-irr",first_date = c(2015, 1))

```

#### M-statistics

At the end of the decomposition, X-11 algorithm provides quality measure of the decomposition called "M statistics": 11 statistics (M1 to M11) and 2 summary indicators (Q et Q-M2). By design $0<M_x<3$ and acceptance region is $M_x \leq 1$

-   **M1** The relative contribution of the irregular over three months span
-   **M2** The relative contribution of the irregular component to the stationary portion of the variance
-   **M3** The amount of month to month change in the irregular component as compared to the amount of month to month change in the trend-cycle (I/C-ratio)
-   **M5** MCD (Months for Cyclical Dominance): The number of months it takes the change in the trend-cycle to surpass the amount of change in the irregular
-   **M6** The amount of year to year change in the irregular as compared to the amount of year to year change in the seasonal (only valid for 3x5 seasonal filter)
-   **M7** The amount of moving seasonality present relative to the amount of stable seasonality
-   **M8** The size of the fluctuations in the seasonal component throughout the whole series
-   **M9** The average linear movement in the seasonal component throughout the whole series
-   **M10** Same as 8, calculated for recent years only (4 years, N-2 to N-5)
-   **M11** Same as 9, calculated for recent years only

The $Q$ statistic is a composite indicator calculated from the $M$ statistics.

$$Q = \frac{10M1 + 11M2 + 10M3 + 8M4 + 11M5 + 10M6 + 18M7 + 7M8 + 7M9 + 4M10 + 4M11}{100}$$

$Q = Q - M2$ (also called $Q2$) is the $Q$ statistic for which the $M2$ statistics was excluded from the formula, i.e.:

$$Q - M2 = \frac{10M1 + 10M3 + 8M4 + 11M5 + 10M6 + 18M7 + 7M8 + 7M9 + 4M10 + 4M11}{89}$$

If a time series does not cover at least 6 years, the $M8$, $M9$, $M10$ and $M11$ statistics cannot be calculated. In this case the $Q$ statistic is computed as:

$$Q = \frac{14M1 + 15M2 + 10M3 + 8M4 + 11M5 + 10M6 + 32M7}{100}$$

The model has a satisfactory quality if the $Q$ statistic is lower than 1.

##### Display in GUI

To display results in GUI, expand NODE

Decomposition(X-11) \> Quality Measures \> Summary

Results displayed in red indicate that the test failed.

![Text](All_images/RDimage46.png)

##### Retrieve in R

In version 2

```{r, eval=FALSE}
# this code snippet is not self-sufficient 
model_sa$decomposition$mstats
```

#### Detailed Quality measures

In GUI all the diagnostics below can be displayed expanding the NODE

Decomposition(X-11) \> Quality Measures \> Details

They are detailed in the [X-11 method chapter](M-X11-decomposition.qmd)

In R (to be added)

### Retrieve final parameters

This section describes the parameters which are automatically chosen by the software as a result of the estimation process. They have no default value.

Final trend filter: length of Henderson filter applied for final estimation (in the second part of the D step).

Final seasonal filer: length of Henderson filter applied for final estimation (in the second part of the D step).

#### Display in GUI

Node Decomposition(X11) \> Final Filters

#### Retrieve in R

In version 2

```{r, eval=FALSE}

model_sa$decomposition$s_filter
model_sa$decomposition$t_filter

```

### User-defined parameters

The following sections describe how to change default values or automatic choices.

##### General settings

-   **Mode**

-   **Seasonal component**

-   **Forecasts horizon**

Length of the forecasts generated by the Reg-Arima model - in months (positive values) - years (negative values) - if set to is set to 0, the X-11 procedure does not use any model-based forecasts but the original X-11 type forecasts for one year. - default value: -1, thus one year from the Arima model

-   **Backcasts horizon**

Length of the backcasts generated by the Reg-Arima model - in months (positive values) - years (negative values) - default value: 0

##### Irregular correction

-   **LSigma**

    -   sets lower sigma (standard deviation) limit used to down-weight the extreme irregular values in the internal seasonal adjustment iterations
    -   values in $[0,Usigma]$
    -   default value is 1.5

-   **USigma**

    -   sets upper sigma (standard deviation)
    -   values in $[Lsigma,+\infty]$
    -   default value is 2.5

-   **Calendarsigma**

    -   allows to set different **LSigma** and **USigma** for each period
    -   values
        -   None (default)
        -   All: standard errors used for the extreme values detection and adjustment computed separately for each calendar month/quarter
        -   Signif: groups determined by Cochran test (check)
        -   Sigmavec: set two customized groups of periods

-   **Excludeforecasts**

    -   ticked: forecasts and backcasts from the Reg-Arima model not used in Irregular Correction
    -   unticked (default): forecasts and backcasts used

##### Seasonality extraction filters choice

Specifies which be used to estimate the seasonal factors for the entire series.

-   **Seasonal filter**

-   default value: *MSR* (Moving seasonality ratio), automatic choice of final seasonal filter, initial filters are $3\times 3$

-   choices: $3\times 1$, $3\times 3$, $3\times 5$, $3\times 9$, $3\times 15$ or Stable

-   "Stable": constant factor for each calendar period (simple moving average of a all $S+I$ values for each period)

User choices will be applied to final phase D step.

The seasonal filters can be selected for the entire series, or for a particular month or quarter.

-   **Details on seasonal filters**

Sets different seasonal filters by period in order to account for seasonal heteroskedasticity (link to M chapter)

-   default value: empty

##### Trend estimation filters

-   **Automatic Henderson filter** our user-defined

    -   default: length 13
    -   unticked: user defined length choice

-   **Henderson filter** length choice

    -   values: odd number in $[3,101]$
    -   default value: 13

Check: will user choice be applied to all steps or only to final phase D step

#### Parameter setting in GUI

All the parameters above can be set with in the specification box.

#### Parameter setting in R packages

In version 2

```{r eval=FALSE}
#Creating a modified specification, customizing all available X11 parameters
modified_spec<- x13_spec(current_sa_model,
    #x11.mode="?",
    #x11.seasonalComp = "?",
    x11.fcasts = -2,
    x11.bcasts = -1,
    x11.lsigma = 1.2,
    x11.usigma = 2.8,
    x11.calendarSigma = NA, 
      x11.sigmaVector = NA,
    x11.excludeFcasts = NA
    # filters 
    x11.trendAuto = NA, 
    x11.trendma = 23,
    x11.seasonalma = "S3X9)

#New SA estimation: apply modified_spec

modified_sa_model<-x13(raw_series,modified_spec)

```

## SEATS Decomposition

[SEATS algorithm](M-SEATS-decomposition.qmd) will decompose the linearized series, in level or in logarithm, using the Arima model fitted by Tramo in the pre-treatment phase.

The sections below will describe

-   specifications needed to run SEATS

-   generated output

-   series

-   diagnostics

-   final parameters

-   user-defined parameters

### Default specifications

The default specifications for SEATS must be chosen at the starting of the SA processing. They are detailed in the [RegArima part](A-sa.qmd#Pre-treatment:%20Reg-ARIMA%20(or%20TRAMO)) Starting point for Tramo-Seats

### Quick Launch

#### From GUI

With a workspace open, an SAProcessing created and open data provider:

-   choose a default specification (link)

-   drop your data and press green arrow (link)

#### In R

In version 2

```{r,eval=FALSE}

library(RJDemetra)
model_sa<-tramoseats(raw_series, spec ="RSAfull")

```

The model_sa R object (list of lists) contains all parameters and results. It will be progressively detailed below.

In version 3

### Retrieve Series

This section outlines how to retrieve the different kids of output series via GUI or R. - final components (including reallocation of pre-adjustment effects) - components in level - components in level or log

#### Stochastic series

Decomposition of the linearized series or of its logarithm (in case of a multiplicative model)

y_lin is split into components: t_lin, s_lin, i_lin

suffixes: - \_f stands for forecast - \_e stands for - \_ef stands for

##### Display in GUI

NODE Decomposition\>Stochastic series - Table with series and its standard error image

-   Plot of Trend with confidence interval image
-   Plot of Seasonal component with confidence interval image

##### Retrieve from GUI

Generating output from GUI (link) or from Cruncher (link), stochastic series, their standard errors, forecasts and forecasts errors can be accessed with the following names

| Series Name             | Meaning |
|-------------------------|---------|
| decomposition.y_lin     |         |
| decomposition.y_lin_f   |         |
| decomposition.y_lin_ef  |         |
| decomposition.t_lin     |         |
| decomposition.t_lin_f   |         |
| decomposition.t_lin_e   |         |
| decomposition.t_lin_f   |         |
| decomposition.sa_lin    |         |
| decomposition.sa_lin_f  |         |
| decomposition.sa_lin_e  |         |
| decomposition.sa_lin_ef |         |
| decomposition.s_lin     |         |
| decomposition.s_lin_f   |         |
| decomposition.s_lin_e   |         |
| decomposition.s_lin_ef  |         |
| decomposition.i_lin     |         |
| decomposition.i_lin_f   |         |
| decomposition.i_lin_e   |         |
| decomposition.i_lin_ef  |         |

##### Retrieve in R

(to be added)
version 2

version 3

#### Components (Level)

Decomposition of the linearized series, back to level in case of a multiplicative model.

y_lin is split into components: t_lin, s_lin, i_lin

suffixes: - \_f stands for forecast - \_e stands for - \_ef stands for

##### Displayed in GUI

NODE Decomposition\>Components - Table with series and its standard error image

##### Retrieve from GUI

Generating output from GUI (link) or from Cruncher (link), component series, their standard errors, forecasts and forecasts errors can be accessed with the following names

| Series Name             | Meaning |
|-------------------------|---------|
| decomposition.y_cmp     |         |
| decomposition.y_cmp_f   |         |
| decomposition.y_cmp_ef  |         |
| decomposition.t_cmp     |         |
| decomposition.t_cmp_f   |         |
| decomposition.t_cmp_e   |         |
| decomposition.t_cmp_f   |         |
| decomposition.sa_cmp    |         |
| decomposition.sa_cmp_f  |         |
| decomposition.sa_cmp_e  |         |
| decomposition.sa_cmp_ef |         |
| decomposition.s_cmp     |         |
| decomposition.s_cmp_f   |         |
| decomposition.s_cmp_e   |         |
| decomposition.s_cmp_ef  |         |
| decomposition.i_cmp     |         |
| decomposition.i_cmp_f   |         |
| decomposition.i_cmp_e   |         |
| decomposition.i_cmp_ef  |         |

##### Retrieve in R

version 2

version 3

##### Bias correction

#### Final series

+---------------------------+------------------------+---------------+----------------------------------------+
| Series                    | Final SEATS components | Final Results | Reallocation of pre-adjustment effects |
+===========================+========================+===============+========================================+
| Raw series (forecasts)    |                        | y (y_f)       |                                        |
+---------------------------+------------------------+---------------+----------------------------------------+
| Linearized series         | B1                     |               | none                                   |
+---------------------------+------------------------+---------------+----------------------------------------+
| Final seasonal component  | D16                    | s (s_f)       |                                        |
+---------------------------+------------------------+---------------+----------------------------------------+
| Final trend               | D12                    | t (t_f)       |                                        |
+---------------------------+------------------------+---------------+----------------------------------------+
| Final irregular           | D13                    | i (i_f)       |                                        |
+---------------------------+------------------------+---------------+----------------------------------------+
| Calendar component        |                        |               |                                        |
+---------------------------+------------------------+---------------+----------------------------------------+
| Seasonal without calendar | D10                    |               |                                        |
+---------------------------+------------------------+---------------+----------------------------------------+

(to be added: reallocation of outliers effects)

##### Display in GUI

Final results are displayed for each series in the NODE MAIN\>Table

![Text](All_images/SA_SEATS_GUI_final_series.png)

Forecasts are glued at the end it *italic*

What can be done with this table (exapandable note ?) - charts container (link) - single series contextual menu (link)

##### Retrieve from GUI

Generating outout from GUI (link) or from Cruncher (link), component series, their standard errors, forecasts and forecasts errors can be acessed with the following names

| Series Name | Meaning |
|-------------|---------|
| y           |         |
| y_f         |         |
| t           |         |
| t_f         |         |
| sa          |         |
| sa_f        |         |
| s           |         |
| s_f         |         |
| i           |         |
| i_f         |         |

##### Retrieve in R

version 2 

version 3

### Retrieve Diagnostics

-   WK analysis

components final estimators

-   Error analysis autocorrelation of the errors (sa, trend) revisions of the errors

-   Growth rates

-   Model based tests

-   Significant seasonality

-   Stationary variance decomposition


### Retrieve Final Parameters

This section describes what is chosen automatically or default.

Relevant if parameters not set manually, or any parameters automatically selected by the software without having a fixed default value. (The rest of the parameters is set in the spec) To manually set hose parameters and see all the fixed default values see Specifications / parameters section

here all have a default value, nothing to be automatically selected ?

#### Arima Models for components

brief description

##### Display in GUI

Click on the **Decomposition** NODE

![](All_images/SA_SEATS_GUI_components_models.png)

##### Retrieve from GUI 

(add names for output and cruncher)

##### Display in R 

(display or retrieve)

version 2 

version 3

#### Other final parameters

Final parameters which can be fine-tuned be the user are described in User-defined specifications section below


### Setting user-defined parameters

The section below explains how the user can fine-tune some seats parameters, which are put in context in [the corresponding method chapter](M-SEATS-decomposition.qmd).the default value is indicated ().

-   Prediction length

Forecast span used in the decomposition default: one year (-1) (years are set in negative values, positive values indicate number of periods)

-   Approximation Mode

Modification type for inadmissible models None (default) Legacy Noisy

-   MA unit root boundary

Modulus threshold for resetteing MA "near-unit" roots \[0,1\] default (0.95)

-   Trend Boundary Modulus thershold for assingning positive real AR Roots \[0,1\] default (0.5)

-   Seasonal Tolerance Degree threshold for assigning complex AR roots \[0,10\] default (2)

-   Seasonal Boundary (unique) Modulus threshold for assigning negative real AR roots \[0,1\] default (0.8)

-   Seasonal Boundary (unique) Same modulus threshold unique seasonal AR roots \[0,1\] default (0.8)

-   Method

Algorithm used for estimation of unobserved componements

Burman (default)

KalmanSmoother

McEllroyMatrix

##### Seting parameters in GUI

In specification window (link) corresponding to a given series:

![Text](All_images%5CSA_SEATS_GUI_user_def_params.png)

##### Set in R

version 2 (RJDemetra)

```{r, eval=FALSE}
tramoseats_spec(
 spec = c("RSAfull", "RSA0", "RSA1", "RSA2", "RSA3", "RSA4", "RSA5"),
  fcst.horizon = NA_integer_,
  seats.predictionLength = NA_integer_,
  seats.approx = c(NA, "None", "Legacy", "Noisy"),
  seats.trendBoundary = NA_integer_,
  seats.seasdBoundary = NA_integer_,
  seats.seasdBoundary1 = NA_integer_,
  seats.seasTol = NA_integer_,
  seats.maBoundary = NA_integer_,
  seats.method = c(NA, "Burman", "KalmanSmoother", "McElroyMatrix")
)

```

in version 3 with {rjd3tramoseats}
(to be added)

## STL

Loess based decomposition algorithm used on linearized data data, no pre-adjustment.

Not currently available. Under construction.

## Basic Structural Models

Not currently available. Under construction.
